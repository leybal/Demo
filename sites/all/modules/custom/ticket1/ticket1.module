<?php

/**
 * Implements hook_permission().
 */
function ticket1_permission() {
  $permissions = array(
    'administer ticket1 entities' => array(
      'title' => t('Administer ticket1 entities'),
    ),
    'view ticket1 entity' => array(
      'title' => t('View ticket1 entity'),
    ),
    'edit ticket1 entity' => array(
      'title' => t('Edit ticket1 entity'),
    ),
    'create ticket1 entities' => array(
      'title' => t('Create ticket1 Entities'),
    ),
    "delete ticket1 entities" => array(
      'title' => t('Delete ticket1 Entities'),
    ),
  );
  return $permissions;
}

/**
 * Implements hook_menu().
 */

function ticket1_menu() {
  $items['admin/structure/tickets/manage'] = array(
    'title' => 'Administer ticket1 entity type',
    'page callback' => 'ticket1_list_entities',
    'access arguments' => array('administer ticket1 entities'),
  );

  $items['admin/structure/tickets/manage/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/structure/tickets/manage/add'] = array(
    'title' => 'Add a Ticket1',
    'page callback' => 'ticket1_add',
    'access arguments' => array('create ticket1 entities'),
    'type' => MENU_LOCAL_ACTION,
  );

//  $items['ticket1/get'] = array(
//    'title' => 'Get a Ticket1',
//    'page callback' => 'ticket1_get',
//    'access arguments' => array('create ticket1 entities'),
//  );

  $items['ticket1/%ticket'] = array(
    'title callback' => 'ticket1_title',
    'title arguments' => array(1),
    'page callback' => 'ticket1_view',
    'page arguments' => array(1),
    'access arguments' => array('view ticket1 entity'),
  );

  // 'View' tab for an individual entity page.
  $items['ticket1/%ticket/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  // 'Edit' tab for an individual entity page.
  $items['ticket1/%ticket/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ticket1_form', 1),
    'access arguments' => array('edit ticket1 entity'),
    'type' => MENU_LOCAL_TASK,
  );

  $items['ticket1/%ticket/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ticket1_delete_form', 1),
    'access arguments' => array('delete ticket1 entity'),
    'type' => MENU_LOCAL_TASK,
  );

}


/**
 * Implements hook_entity_info().
 */
function ticket1_entity_info() {
  $info['ticket1'] = array(
    'label' => t('Ticket1'),
    'controller class' => 'Ticket1Controller',
    'base table' => 'ticket1',
    'uri callback' => 'ticket1_uri',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'tid' ,
    ),
    'bundle keys' => array(
    ),
    'static cache' => TRUE,
    'bundles' => array(
      'ticket1' => array(
        'label' => 'Standard Ticket',
        'admin' => array(
          'path' => 'admin/structure/tickets/manage',
          'access arguments' => array('administer ticket1 entities'),
        ),
      ),
    ),
    'view modes' => array(
      'full' => array(
        'label' => t('Full'),
      ),
      'short' => array(
        'label' => t('Short'),
      ),
    ),
  );

  return $info;
}



/**
 * Implements hook_field_extra_fields().
 */
function ticket1_field_extra_fields() {
  $form_elements['seats'] = array(
    'label' => t('Number of seats'),
    'weight' => 0,
  );
  $display_elements['seats'] = array(
    'label' => t('Number of seats'),
    'weight' => 0,
  );

  $extra_fields['ticket1']['ticket1_standard']['form'] = $form_elements;
  $extra_fields['ticket1']['ticket1_standard']['display'] = $display_elements;

  return $extra_fields;
}

function ticket1_list_entities() {
  $content = array();
  // Load all of our entities.
  $entities = ticket1_load_multiple();

  $destination = drupal_get_destination();

  if (!empty($entities)) {
    foreach ($entities as $entity) {
      // Create tabular rows for our entities.
      $rows[] = array(
        'data' => array(
          'id' => $entity->tid,
          'seats' => $entity->seats,
          'operations' => array(
            'data' => array(
              '#type' => 'link',
              '#title' => t('edit'),
              '#href' => "ticket1/$entity->tid/edit",
              '#options' => array('query' => $destination)
            )
          ),
        ),
      );
    }

    // Put our entities into a themed table. See theme_table() for details.
    $content['entity_table'] = array(
      '#theme' => 'table',
      '#rows' => $rows,
      '#header' => array(t('ID'), t('Num of Seats'), t('Operations')),
    );
  }

  else {
    // There were no entities. Tell the user.
    $content[] = array(
      '#type' => 'item',
      '#markup' => t('There are no tickets.'),
    );
  }

  return $content;
}


function ticket1_load($id = NULL, $reset = FALSE) {
  $ids = (isset($id) ? array($id) : array());
  $tickets = ticket1_load_multiple($ids, array(), $reset);
  return $tickets ? reset($tickets) : FALSE;
}

function ticket1_load_multiple($ids = FALSE, $conditions = array(), $reset = FALSE) {
  return entity_load('ticket1', $ids, $conditions, $reset);
}

function ticket1_save(&$entity) {
  return entity_get_controller('ticket1')->save($entity);
}

function ticket1_uri($ticket) {
  return array(
    'path' => 'ticket1/' . $ticket->tid,
  );
}

function ticket1_add() {
  $entity = entity_get_controller('ticket1')->create();
  return drupal_get_form('ticket1_form', $entity);
}


function ticket1_form($form, &$form_state, $entity) {
  $form['seats'] = array(
    '#type' => 'textfield',
    '#title' => t('Seats'),
    '#required' => TRUE,
    '#default_value' => $entity->seats,
  );

  $form['#entity'] = array(
    '#type' => 'value',
    '#value' => $entity,
  );

  $form_state['ticket1'] = $entity;

  field_attach_form('ticket1', $entity, $form, $form_state);

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
    '#weight' => 100,
  );

  return $form;
}

//ticket_form_validate
function ticket1_form_validate($form, &$form_state) {
  field_attach_form_validate('ticket1', $form_state['ticket1'], $form, $form_state);
}

//ticket_form_submit
function ticket1_form_submit($form, &$form_state) {
  $entity = $form_state['ticket1'];

  entity_form_submit_build_entity('ticket1', $entity, $form, $form_state);

  $entity = ticket1_save($entity);

  // $form_state['redirect'] = 'examples/entity_example/basic/' . $entity->basic_id;
  // $form_state['redirect'] = 'admin/structure/tickets/manage';
}