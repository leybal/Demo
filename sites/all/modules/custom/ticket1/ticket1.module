<?php

/**
 * Implements hook_entity_info().
 */
function ticket1_entity_info() {
  $info['ticket1'] = array(
    'label' => t('ticket1 Entity'),
    'controller class' => 'Ticket1Controller',
    'base table' => 'ticket1',
    'uri callback' => 'ticket1_uri',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'tid' ,
    ),
    'bundle keys' => array(
    ),
    'static cache' => TRUE,

    'bundles' => array(
      'ticket1_standard' => array(
        'label' => 'Standard ticket1',
        'admin' => array(
          'path' => 'admin/structure/tickets/manage',
          'access arguments' => array('administer ticket1 entities'),
        ),
      ),
    ),

    'view modes' => array(
      'full' => array(
        'label' => t('Full'),
      ),
      'short' => array(
        'label' => t('Short'),
      ),
    ),
  );

  return $info;
}

/**
 * Implements hook_menu().
 */

function ticket1_menu() {
  $items['admin/structure/tickets/manage'] = array(
    'title' => 'Administer ticket1 entity type',
    'page callback' => 'ticket1_list_entities',
    'access arguments' => array('administer ticket1 entities'),
  );

  $items['admin/structure/tickets/manage/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/structure/tickets/manage/add'] = array(
    'title' => 'Add a Ticket1',
    'page callback' => 'ticket1_add',
    'access arguments' => array('create ticket1 entities'),
    'type' => MENU_LOCAL_ACTION,
  );

  $items['ticket1/get'] = array(
    'title' => 'Get a Ticket1',
    'page callback' => 'ticket1_get',
    'access arguments' => array('create ticket1 entities'),
  );

}


/**
 * Implements hook_permission().
 */
function ticket1_permission() {
  $permissions = array(
    'administer ticket1 entities' => array(
      'title' => t('Administer ticket1 entities'),
    ),
    'view any ticket1 entity' => array(
      'title' => t('View ticket1 entity'),
    ),
    'edit any ticket1 entity' => array(
      'title' => t('Edit ticket1 entity'),
    ),
    'create ticket1 entities' => array(
      'title' => t('Create ticket1 Entities'),
    ),
    "delete ticket1 entities" => array(
      'title' => t('Delete ticket1 Entities'),
    ),
  );
  return $permissions;
}


/**
 * Implements hook_field_extra_fields().
 */
function ticket1_field_extra_fields() {
  $form_elements['seats'] = array(
    'label' => t('Number of seats'),
    'weight' => 0,
  );
  $display_elements['seats'] = array(
    'label' => t('Number of seats'),
    'weight' => 0,
  );

  $extra_fields['ticket1']['ticket1_standard']['form'] = $form_elements;
  $extra_fields['ticket1']['ticket1_standard']['display'] = $display_elements;

  return $extra_fields;
}


function ticket1_load($id = NULL, $reset = FALSE) {
  $ids = (isset($id) ? array($id) : array());
  $tickets = ticket1_load_multiple($ids, array(), $reset);
  return $tickets ? reset($tickets) : FALSE;
}

function ticket1_load_multiple($ids = FALSE, $conditions = array(), $reset = FALSE) {
  return entity_load('ticket1', $ids, $conditions, $reset);
}

function ticket1_uri($basic) {
  return array(
    'path' => 'ticket1/' . $basic->tid,
  );
}


function ticket1_list_entities() {
  $content = array();
  $entities = ticket1_load_multiple();
  if (!empty($entities)) {
    foreach ($entities as $entity) {
      $rows[] = array(
        'data' => array(
          'id' => $entity->tid,
          'seats' => $entity->seats,
        ),
      );
    }
    // Put our entities into a themed table. See theme_table() for details.
    $content['entity_table'] = array(
      '#theme' => 'table',
      '#rows' => $rows,
      '#header' => array(t('ID'), t('Num of Seats')),
    );
  }
  else {
    // There were no entities. Tell the user.
    $content[] = array(
      '#type' => 'item',
      '#markup' => t('No ticket1 entities.'),
    );
  }
  return $content;
}
